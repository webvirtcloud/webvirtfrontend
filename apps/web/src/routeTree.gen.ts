/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as authRouteImport } from './routes/(auth)/route'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthenticatedSettingsImport } from './routes/_authenticated/settings'
import { Route as AuthenticatedKeypairsImport } from './routes/_authenticated/keypairs'
import { Route as AuthenticatedFloatingIpsImport } from './routes/_authenticated/floating-ips'
import { Route as AuthenticatedBillingImport } from './routes/_authenticated/billing'
import { Route as authResetPasswordImport } from './routes/(auth)/reset-password'
import { Route as authRegisterImport } from './routes/(auth)/register'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as AuthenticatedImagesRouteImport } from './routes/_authenticated/images/route'
import { Route as AuthenticatedLoadbalancersIndexImport } from './routes/_authenticated/loadbalancers/index'
import { Route as AuthenticatedFirewallsIndexImport } from './routes/_authenticated/firewalls/index'
import { Route as AuthenticatedDatabasesIndexImport } from './routes/_authenticated/databases/index'
import { Route as authConfirmEmailIndexImport } from './routes/(auth)/confirm-email/index'
import { Route as AuthenticatedVirtancesCreateImport } from './routes/_authenticated/virtances/create'
import { Route as AuthenticatedLoadbalancersCreateImport } from './routes/_authenticated/loadbalancers/create'
import { Route as AuthenticatedImagesSnapshotsImport } from './routes/_authenticated/images/snapshots'
import { Route as AuthenticatedImagesBackupsImport } from './routes/_authenticated/images/backups'
import { Route as AuthenticatedDatabasesCreateImport } from './routes/_authenticated/databases/create'
import { Route as authConfirmEmailTokenImport } from './routes/(auth)/confirm-email/$token'
import { Route as AuthenticatedVirtancesIdRouteImport } from './routes/_authenticated/virtances/$id/route'
import { Route as AuthenticatedLoadbalancersUuidRouteImport } from './routes/_authenticated/loadbalancers/$uuid/route'
import { Route as AuthenticatedFirewallsUuidRouteImport } from './routes/_authenticated/firewalls/$uuid/route'
import { Route as AuthenticatedDatabasesUuidRouteImport } from './routes/_authenticated/databases/$uuid/route'
import { Route as AuthenticatedVirtancesIdIndexImport } from './routes/_authenticated/virtances/$id/index'
import { Route as AuthenticatedFirewallsUuidIndexImport } from './routes/_authenticated/firewalls/$uuid/index'
import { Route as AuthenticatedVirtancesIdSnapshotsImport } from './routes/_authenticated/virtances/$id/snapshots'
import { Route as AuthenticatedVirtancesIdSettingsImport } from './routes/_authenticated/virtances/$id/settings'
import { Route as AuthenticatedVirtancesIdResizeImport } from './routes/_authenticated/virtances/$id/resize'
import { Route as AuthenticatedVirtancesIdNetworkImport } from './routes/_authenticated/virtances/$id/network'
import { Route as AuthenticatedVirtancesIdHistoryImport } from './routes/_authenticated/virtances/$id/history'
import { Route as AuthenticatedVirtancesIdGraphsImport } from './routes/_authenticated/virtances/$id/graphs'
import { Route as AuthenticatedVirtancesIdConsoleImport } from './routes/_authenticated/virtances/$id/console'
import { Route as AuthenticatedVirtancesIdBackupsImport } from './routes/_authenticated/virtances/$id/backups'
import { Route as AuthenticatedLoadbalancersUuidVirtancesImport } from './routes/_authenticated/loadbalancers/$uuid/virtances'
import { Route as AuthenticatedLoadbalancersUuidSettingsImport } from './routes/_authenticated/loadbalancers/$uuid/settings'
import { Route as AuthenticatedFirewallsUuidVirtancesImport } from './routes/_authenticated/firewalls/$uuid/virtances'
import { Route as AuthenticatedDatabasesUuidSnapshotsImport } from './routes/_authenticated/databases/$uuid/snapshots'
import { Route as AuthenticatedDatabasesUuidSettingsImport } from './routes/_authenticated/databases/$uuid/settings'
import { Route as AuthenticatedDatabasesUuidOverviewImport } from './routes/_authenticated/databases/$uuid/overview'
import { Route as AuthenticatedDatabasesUuidBackupsImport } from './routes/_authenticated/databases/$uuid/backups'

// Create/Update Routes

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const authRouteRoute = authRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedSettingsRoute = AuthenticatedSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedKeypairsRoute = AuthenticatedKeypairsImport.update({
  id: '/keypairs',
  path: '/keypairs',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedFloatingIpsRoute = AuthenticatedFloatingIpsImport.update({
  id: '/floating-ips',
  path: '/floating-ips',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedBillingRoute = AuthenticatedBillingImport.update({
  id: '/billing',
  path: '/billing',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const authResetPasswordRoute = authResetPasswordImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => authRouteRoute,
} as any)

const authRegisterRoute = authRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => authRouteRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => authRouteRoute,
} as any)

const AuthenticatedImagesRouteRoute = AuthenticatedImagesRouteImport.update({
  id: '/images',
  path: '/images',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedLoadbalancersIndexRoute =
  AuthenticatedLoadbalancersIndexImport.update({
    id: '/loadbalancers/',
    path: '/loadbalancers/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedFirewallsIndexRoute =
  AuthenticatedFirewallsIndexImport.update({
    id: '/firewalls/',
    path: '/firewalls/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedDatabasesIndexRoute =
  AuthenticatedDatabasesIndexImport.update({
    id: '/databases/',
    path: '/databases/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const authConfirmEmailIndexRoute = authConfirmEmailIndexImport.update({
  id: '/confirm-email/',
  path: '/confirm-email/',
  getParentRoute: () => authRouteRoute,
} as any)

const AuthenticatedVirtancesCreateRoute =
  AuthenticatedVirtancesCreateImport.update({
    id: '/virtances/create',
    path: '/virtances/create',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedLoadbalancersCreateRoute =
  AuthenticatedLoadbalancersCreateImport.update({
    id: '/loadbalancers/create',
    path: '/loadbalancers/create',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedImagesSnapshotsRoute =
  AuthenticatedImagesSnapshotsImport.update({
    id: '/snapshots',
    path: '/snapshots',
    getParentRoute: () => AuthenticatedImagesRouteRoute,
  } as any)

const AuthenticatedImagesBackupsRoute = AuthenticatedImagesBackupsImport.update(
  {
    id: '/backups',
    path: '/backups',
    getParentRoute: () => AuthenticatedImagesRouteRoute,
  } as any,
)

const AuthenticatedDatabasesCreateRoute =
  AuthenticatedDatabasesCreateImport.update({
    id: '/databases/create',
    path: '/databases/create',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const authConfirmEmailTokenRoute = authConfirmEmailTokenImport.update({
  id: '/confirm-email/$token',
  path: '/confirm-email/$token',
  getParentRoute: () => authRouteRoute,
} as any)

const AuthenticatedVirtancesIdRouteRoute =
  AuthenticatedVirtancesIdRouteImport.update({
    id: '/virtances/$id',
    path: '/virtances/$id',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedLoadbalancersUuidRouteRoute =
  AuthenticatedLoadbalancersUuidRouteImport.update({
    id: '/loadbalancers/$uuid',
    path: '/loadbalancers/$uuid',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedFirewallsUuidRouteRoute =
  AuthenticatedFirewallsUuidRouteImport.update({
    id: '/firewalls/$uuid',
    path: '/firewalls/$uuid',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedDatabasesUuidRouteRoute =
  AuthenticatedDatabasesUuidRouteImport.update({
    id: '/databases/$uuid',
    path: '/databases/$uuid',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedVirtancesIdIndexRoute =
  AuthenticatedVirtancesIdIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedVirtancesIdRouteRoute,
  } as any)

const AuthenticatedFirewallsUuidIndexRoute =
  AuthenticatedFirewallsUuidIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedFirewallsUuidRouteRoute,
  } as any)

const AuthenticatedVirtancesIdSnapshotsRoute =
  AuthenticatedVirtancesIdSnapshotsImport.update({
    id: '/snapshots',
    path: '/snapshots',
    getParentRoute: () => AuthenticatedVirtancesIdRouteRoute,
  } as any)

const AuthenticatedVirtancesIdSettingsRoute =
  AuthenticatedVirtancesIdSettingsImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedVirtancesIdRouteRoute,
  } as any)

const AuthenticatedVirtancesIdResizeRoute =
  AuthenticatedVirtancesIdResizeImport.update({
    id: '/resize',
    path: '/resize',
    getParentRoute: () => AuthenticatedVirtancesIdRouteRoute,
  } as any)

const AuthenticatedVirtancesIdNetworkRoute =
  AuthenticatedVirtancesIdNetworkImport.update({
    id: '/network',
    path: '/network',
    getParentRoute: () => AuthenticatedVirtancesIdRouteRoute,
  } as any)

const AuthenticatedVirtancesIdHistoryRoute =
  AuthenticatedVirtancesIdHistoryImport.update({
    id: '/history',
    path: '/history',
    getParentRoute: () => AuthenticatedVirtancesIdRouteRoute,
  } as any)

const AuthenticatedVirtancesIdGraphsRoute =
  AuthenticatedVirtancesIdGraphsImport.update({
    id: '/graphs',
    path: '/graphs',
    getParentRoute: () => AuthenticatedVirtancesIdRouteRoute,
  } as any)

const AuthenticatedVirtancesIdConsoleRoute =
  AuthenticatedVirtancesIdConsoleImport.update({
    id: '/console',
    path: '/console',
    getParentRoute: () => AuthenticatedVirtancesIdRouteRoute,
  } as any)

const AuthenticatedVirtancesIdBackupsRoute =
  AuthenticatedVirtancesIdBackupsImport.update({
    id: '/backups',
    path: '/backups',
    getParentRoute: () => AuthenticatedVirtancesIdRouteRoute,
  } as any)

const AuthenticatedLoadbalancersUuidVirtancesRoute =
  AuthenticatedLoadbalancersUuidVirtancesImport.update({
    id: '/virtances',
    path: '/virtances',
    getParentRoute: () => AuthenticatedLoadbalancersUuidRouteRoute,
  } as any)

const AuthenticatedLoadbalancersUuidSettingsRoute =
  AuthenticatedLoadbalancersUuidSettingsImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedLoadbalancersUuidRouteRoute,
  } as any)

const AuthenticatedFirewallsUuidVirtancesRoute =
  AuthenticatedFirewallsUuidVirtancesImport.update({
    id: '/virtances',
    path: '/virtances',
    getParentRoute: () => AuthenticatedFirewallsUuidRouteRoute,
  } as any)

const AuthenticatedDatabasesUuidSnapshotsRoute =
  AuthenticatedDatabasesUuidSnapshotsImport.update({
    id: '/snapshots',
    path: '/snapshots',
    getParentRoute: () => AuthenticatedDatabasesUuidRouteRoute,
  } as any)

const AuthenticatedDatabasesUuidSettingsRoute =
  AuthenticatedDatabasesUuidSettingsImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedDatabasesUuidRouteRoute,
  } as any)

const AuthenticatedDatabasesUuidOverviewRoute =
  AuthenticatedDatabasesUuidOverviewImport.update({
    id: '/overview',
    path: '/overview',
    getParentRoute: () => AuthenticatedDatabasesUuidRouteRoute,
  } as any)

const AuthenticatedDatabasesUuidBackupsRoute =
  AuthenticatedDatabasesUuidBackupsImport.update({
    id: '/backups',
    path: '/backups',
    getParentRoute: () => AuthenticatedDatabasesUuidRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authRouteImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/images': {
      id: '/_authenticated/images'
      path: '/images'
      fullPath: '/images'
      preLoaderRoute: typeof AuthenticatedImagesRouteImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof authRouteImport
    }
    '/(auth)/register': {
      id: '/(auth)/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authRegisterImport
      parentRoute: typeof authRouteImport
    }
    '/(auth)/reset-password': {
      id: '/(auth)/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof authResetPasswordImport
      parentRoute: typeof authRouteImport
    }
    '/_authenticated/billing': {
      id: '/_authenticated/billing'
      path: '/billing'
      fullPath: '/billing'
      preLoaderRoute: typeof AuthenticatedBillingImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/floating-ips': {
      id: '/_authenticated/floating-ips'
      path: '/floating-ips'
      fullPath: '/floating-ips'
      preLoaderRoute: typeof AuthenticatedFloatingIpsImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/keypairs': {
      id: '/_authenticated/keypairs'
      path: '/keypairs'
      fullPath: '/keypairs'
      preLoaderRoute: typeof AuthenticatedKeypairsImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/databases/$uuid': {
      id: '/_authenticated/databases/$uuid'
      path: '/databases/$uuid'
      fullPath: '/databases/$uuid'
      preLoaderRoute: typeof AuthenticatedDatabasesUuidRouteImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/firewalls/$uuid': {
      id: '/_authenticated/firewalls/$uuid'
      path: '/firewalls/$uuid'
      fullPath: '/firewalls/$uuid'
      preLoaderRoute: typeof AuthenticatedFirewallsUuidRouteImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/loadbalancers/$uuid': {
      id: '/_authenticated/loadbalancers/$uuid'
      path: '/loadbalancers/$uuid'
      fullPath: '/loadbalancers/$uuid'
      preLoaderRoute: typeof AuthenticatedLoadbalancersUuidRouteImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/virtances/$id': {
      id: '/_authenticated/virtances/$id'
      path: '/virtances/$id'
      fullPath: '/virtances/$id'
      preLoaderRoute: typeof AuthenticatedVirtancesIdRouteImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/(auth)/confirm-email/$token': {
      id: '/(auth)/confirm-email/$token'
      path: '/confirm-email/$token'
      fullPath: '/confirm-email/$token'
      preLoaderRoute: typeof authConfirmEmailTokenImport
      parentRoute: typeof authRouteImport
    }
    '/_authenticated/databases/create': {
      id: '/_authenticated/databases/create'
      path: '/databases/create'
      fullPath: '/databases/create'
      preLoaderRoute: typeof AuthenticatedDatabasesCreateImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/images/backups': {
      id: '/_authenticated/images/backups'
      path: '/backups'
      fullPath: '/images/backups'
      preLoaderRoute: typeof AuthenticatedImagesBackupsImport
      parentRoute: typeof AuthenticatedImagesRouteImport
    }
    '/_authenticated/images/snapshots': {
      id: '/_authenticated/images/snapshots'
      path: '/snapshots'
      fullPath: '/images/snapshots'
      preLoaderRoute: typeof AuthenticatedImagesSnapshotsImport
      parentRoute: typeof AuthenticatedImagesRouteImport
    }
    '/_authenticated/loadbalancers/create': {
      id: '/_authenticated/loadbalancers/create'
      path: '/loadbalancers/create'
      fullPath: '/loadbalancers/create'
      preLoaderRoute: typeof AuthenticatedLoadbalancersCreateImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/virtances/create': {
      id: '/_authenticated/virtances/create'
      path: '/virtances/create'
      fullPath: '/virtances/create'
      preLoaderRoute: typeof AuthenticatedVirtancesCreateImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/(auth)/confirm-email/': {
      id: '/(auth)/confirm-email/'
      path: '/confirm-email'
      fullPath: '/confirm-email'
      preLoaderRoute: typeof authConfirmEmailIndexImport
      parentRoute: typeof authRouteImport
    }
    '/_authenticated/databases/': {
      id: '/_authenticated/databases/'
      path: '/databases'
      fullPath: '/databases'
      preLoaderRoute: typeof AuthenticatedDatabasesIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/firewalls/': {
      id: '/_authenticated/firewalls/'
      path: '/firewalls'
      fullPath: '/firewalls'
      preLoaderRoute: typeof AuthenticatedFirewallsIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/loadbalancers/': {
      id: '/_authenticated/loadbalancers/'
      path: '/loadbalancers'
      fullPath: '/loadbalancers'
      preLoaderRoute: typeof AuthenticatedLoadbalancersIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/databases/$uuid/backups': {
      id: '/_authenticated/databases/$uuid/backups'
      path: '/backups'
      fullPath: '/databases/$uuid/backups'
      preLoaderRoute: typeof AuthenticatedDatabasesUuidBackupsImport
      parentRoute: typeof AuthenticatedDatabasesUuidRouteImport
    }
    '/_authenticated/databases/$uuid/overview': {
      id: '/_authenticated/databases/$uuid/overview'
      path: '/overview'
      fullPath: '/databases/$uuid/overview'
      preLoaderRoute: typeof AuthenticatedDatabasesUuidOverviewImport
      parentRoute: typeof AuthenticatedDatabasesUuidRouteImport
    }
    '/_authenticated/databases/$uuid/settings': {
      id: '/_authenticated/databases/$uuid/settings'
      path: '/settings'
      fullPath: '/databases/$uuid/settings'
      preLoaderRoute: typeof AuthenticatedDatabasesUuidSettingsImport
      parentRoute: typeof AuthenticatedDatabasesUuidRouteImport
    }
    '/_authenticated/databases/$uuid/snapshots': {
      id: '/_authenticated/databases/$uuid/snapshots'
      path: '/snapshots'
      fullPath: '/databases/$uuid/snapshots'
      preLoaderRoute: typeof AuthenticatedDatabasesUuidSnapshotsImport
      parentRoute: typeof AuthenticatedDatabasesUuidRouteImport
    }
    '/_authenticated/firewalls/$uuid/virtances': {
      id: '/_authenticated/firewalls/$uuid/virtances'
      path: '/virtances'
      fullPath: '/firewalls/$uuid/virtances'
      preLoaderRoute: typeof AuthenticatedFirewallsUuidVirtancesImport
      parentRoute: typeof AuthenticatedFirewallsUuidRouteImport
    }
    '/_authenticated/loadbalancers/$uuid/settings': {
      id: '/_authenticated/loadbalancers/$uuid/settings'
      path: '/settings'
      fullPath: '/loadbalancers/$uuid/settings'
      preLoaderRoute: typeof AuthenticatedLoadbalancersUuidSettingsImport
      parentRoute: typeof AuthenticatedLoadbalancersUuidRouteImport
    }
    '/_authenticated/loadbalancers/$uuid/virtances': {
      id: '/_authenticated/loadbalancers/$uuid/virtances'
      path: '/virtances'
      fullPath: '/loadbalancers/$uuid/virtances'
      preLoaderRoute: typeof AuthenticatedLoadbalancersUuidVirtancesImport
      parentRoute: typeof AuthenticatedLoadbalancersUuidRouteImport
    }
    '/_authenticated/virtances/$id/backups': {
      id: '/_authenticated/virtances/$id/backups'
      path: '/backups'
      fullPath: '/virtances/$id/backups'
      preLoaderRoute: typeof AuthenticatedVirtancesIdBackupsImport
      parentRoute: typeof AuthenticatedVirtancesIdRouteImport
    }
    '/_authenticated/virtances/$id/console': {
      id: '/_authenticated/virtances/$id/console'
      path: '/console'
      fullPath: '/virtances/$id/console'
      preLoaderRoute: typeof AuthenticatedVirtancesIdConsoleImport
      parentRoute: typeof AuthenticatedVirtancesIdRouteImport
    }
    '/_authenticated/virtances/$id/graphs': {
      id: '/_authenticated/virtances/$id/graphs'
      path: '/graphs'
      fullPath: '/virtances/$id/graphs'
      preLoaderRoute: typeof AuthenticatedVirtancesIdGraphsImport
      parentRoute: typeof AuthenticatedVirtancesIdRouteImport
    }
    '/_authenticated/virtances/$id/history': {
      id: '/_authenticated/virtances/$id/history'
      path: '/history'
      fullPath: '/virtances/$id/history'
      preLoaderRoute: typeof AuthenticatedVirtancesIdHistoryImport
      parentRoute: typeof AuthenticatedVirtancesIdRouteImport
    }
    '/_authenticated/virtances/$id/network': {
      id: '/_authenticated/virtances/$id/network'
      path: '/network'
      fullPath: '/virtances/$id/network'
      preLoaderRoute: typeof AuthenticatedVirtancesIdNetworkImport
      parentRoute: typeof AuthenticatedVirtancesIdRouteImport
    }
    '/_authenticated/virtances/$id/resize': {
      id: '/_authenticated/virtances/$id/resize'
      path: '/resize'
      fullPath: '/virtances/$id/resize'
      preLoaderRoute: typeof AuthenticatedVirtancesIdResizeImport
      parentRoute: typeof AuthenticatedVirtancesIdRouteImport
    }
    '/_authenticated/virtances/$id/settings': {
      id: '/_authenticated/virtances/$id/settings'
      path: '/settings'
      fullPath: '/virtances/$id/settings'
      preLoaderRoute: typeof AuthenticatedVirtancesIdSettingsImport
      parentRoute: typeof AuthenticatedVirtancesIdRouteImport
    }
    '/_authenticated/virtances/$id/snapshots': {
      id: '/_authenticated/virtances/$id/snapshots'
      path: '/snapshots'
      fullPath: '/virtances/$id/snapshots'
      preLoaderRoute: typeof AuthenticatedVirtancesIdSnapshotsImport
      parentRoute: typeof AuthenticatedVirtancesIdRouteImport
    }
    '/_authenticated/firewalls/$uuid/': {
      id: '/_authenticated/firewalls/$uuid/'
      path: '/'
      fullPath: '/firewalls/$uuid/'
      preLoaderRoute: typeof AuthenticatedFirewallsUuidIndexImport
      parentRoute: typeof AuthenticatedFirewallsUuidRouteImport
    }
    '/_authenticated/virtances/$id/': {
      id: '/_authenticated/virtances/$id/'
      path: '/'
      fullPath: '/virtances/$id/'
      preLoaderRoute: typeof AuthenticatedVirtancesIdIndexImport
      parentRoute: typeof AuthenticatedVirtancesIdRouteImport
    }
  }
}

// Create and export the route tree

interface authRouteRouteChildren {
  authLoginRoute: typeof authLoginRoute
  authRegisterRoute: typeof authRegisterRoute
  authResetPasswordRoute: typeof authResetPasswordRoute
  authConfirmEmailTokenRoute: typeof authConfirmEmailTokenRoute
  authConfirmEmailIndexRoute: typeof authConfirmEmailIndexRoute
}

const authRouteRouteChildren: authRouteRouteChildren = {
  authLoginRoute: authLoginRoute,
  authRegisterRoute: authRegisterRoute,
  authResetPasswordRoute: authResetPasswordRoute,
  authConfirmEmailTokenRoute: authConfirmEmailTokenRoute,
  authConfirmEmailIndexRoute: authConfirmEmailIndexRoute,
}

const authRouteRouteWithChildren = authRouteRoute._addFileChildren(
  authRouteRouteChildren,
)

interface AuthenticatedImagesRouteRouteChildren {
  AuthenticatedImagesBackupsRoute: typeof AuthenticatedImagesBackupsRoute
  AuthenticatedImagesSnapshotsRoute: typeof AuthenticatedImagesSnapshotsRoute
}

const AuthenticatedImagesRouteRouteChildren: AuthenticatedImagesRouteRouteChildren =
  {
    AuthenticatedImagesBackupsRoute: AuthenticatedImagesBackupsRoute,
    AuthenticatedImagesSnapshotsRoute: AuthenticatedImagesSnapshotsRoute,
  }

const AuthenticatedImagesRouteRouteWithChildren =
  AuthenticatedImagesRouteRoute._addFileChildren(
    AuthenticatedImagesRouteRouteChildren,
  )

interface AuthenticatedDatabasesUuidRouteRouteChildren {
  AuthenticatedDatabasesUuidBackupsRoute: typeof AuthenticatedDatabasesUuidBackupsRoute
  AuthenticatedDatabasesUuidOverviewRoute: typeof AuthenticatedDatabasesUuidOverviewRoute
  AuthenticatedDatabasesUuidSettingsRoute: typeof AuthenticatedDatabasesUuidSettingsRoute
  AuthenticatedDatabasesUuidSnapshotsRoute: typeof AuthenticatedDatabasesUuidSnapshotsRoute
}

const AuthenticatedDatabasesUuidRouteRouteChildren: AuthenticatedDatabasesUuidRouteRouteChildren =
  {
    AuthenticatedDatabasesUuidBackupsRoute:
      AuthenticatedDatabasesUuidBackupsRoute,
    AuthenticatedDatabasesUuidOverviewRoute:
      AuthenticatedDatabasesUuidOverviewRoute,
    AuthenticatedDatabasesUuidSettingsRoute:
      AuthenticatedDatabasesUuidSettingsRoute,
    AuthenticatedDatabasesUuidSnapshotsRoute:
      AuthenticatedDatabasesUuidSnapshotsRoute,
  }

const AuthenticatedDatabasesUuidRouteRouteWithChildren =
  AuthenticatedDatabasesUuidRouteRoute._addFileChildren(
    AuthenticatedDatabasesUuidRouteRouteChildren,
  )

interface AuthenticatedFirewallsUuidRouteRouteChildren {
  AuthenticatedFirewallsUuidVirtancesRoute: typeof AuthenticatedFirewallsUuidVirtancesRoute
  AuthenticatedFirewallsUuidIndexRoute: typeof AuthenticatedFirewallsUuidIndexRoute
}

const AuthenticatedFirewallsUuidRouteRouteChildren: AuthenticatedFirewallsUuidRouteRouteChildren =
  {
    AuthenticatedFirewallsUuidVirtancesRoute:
      AuthenticatedFirewallsUuidVirtancesRoute,
    AuthenticatedFirewallsUuidIndexRoute: AuthenticatedFirewallsUuidIndexRoute,
  }

const AuthenticatedFirewallsUuidRouteRouteWithChildren =
  AuthenticatedFirewallsUuidRouteRoute._addFileChildren(
    AuthenticatedFirewallsUuidRouteRouteChildren,
  )

interface AuthenticatedLoadbalancersUuidRouteRouteChildren {
  AuthenticatedLoadbalancersUuidSettingsRoute: typeof AuthenticatedLoadbalancersUuidSettingsRoute
  AuthenticatedLoadbalancersUuidVirtancesRoute: typeof AuthenticatedLoadbalancersUuidVirtancesRoute
}

const AuthenticatedLoadbalancersUuidRouteRouteChildren: AuthenticatedLoadbalancersUuidRouteRouteChildren =
  {
    AuthenticatedLoadbalancersUuidSettingsRoute:
      AuthenticatedLoadbalancersUuidSettingsRoute,
    AuthenticatedLoadbalancersUuidVirtancesRoute:
      AuthenticatedLoadbalancersUuidVirtancesRoute,
  }

const AuthenticatedLoadbalancersUuidRouteRouteWithChildren =
  AuthenticatedLoadbalancersUuidRouteRoute._addFileChildren(
    AuthenticatedLoadbalancersUuidRouteRouteChildren,
  )

interface AuthenticatedVirtancesIdRouteRouteChildren {
  AuthenticatedVirtancesIdBackupsRoute: typeof AuthenticatedVirtancesIdBackupsRoute
  AuthenticatedVirtancesIdConsoleRoute: typeof AuthenticatedVirtancesIdConsoleRoute
  AuthenticatedVirtancesIdGraphsRoute: typeof AuthenticatedVirtancesIdGraphsRoute
  AuthenticatedVirtancesIdHistoryRoute: typeof AuthenticatedVirtancesIdHistoryRoute
  AuthenticatedVirtancesIdNetworkRoute: typeof AuthenticatedVirtancesIdNetworkRoute
  AuthenticatedVirtancesIdResizeRoute: typeof AuthenticatedVirtancesIdResizeRoute
  AuthenticatedVirtancesIdSettingsRoute: typeof AuthenticatedVirtancesIdSettingsRoute
  AuthenticatedVirtancesIdSnapshotsRoute: typeof AuthenticatedVirtancesIdSnapshotsRoute
  AuthenticatedVirtancesIdIndexRoute: typeof AuthenticatedVirtancesIdIndexRoute
}

const AuthenticatedVirtancesIdRouteRouteChildren: AuthenticatedVirtancesIdRouteRouteChildren =
  {
    AuthenticatedVirtancesIdBackupsRoute: AuthenticatedVirtancesIdBackupsRoute,
    AuthenticatedVirtancesIdConsoleRoute: AuthenticatedVirtancesIdConsoleRoute,
    AuthenticatedVirtancesIdGraphsRoute: AuthenticatedVirtancesIdGraphsRoute,
    AuthenticatedVirtancesIdHistoryRoute: AuthenticatedVirtancesIdHistoryRoute,
    AuthenticatedVirtancesIdNetworkRoute: AuthenticatedVirtancesIdNetworkRoute,
    AuthenticatedVirtancesIdResizeRoute: AuthenticatedVirtancesIdResizeRoute,
    AuthenticatedVirtancesIdSettingsRoute:
      AuthenticatedVirtancesIdSettingsRoute,
    AuthenticatedVirtancesIdSnapshotsRoute:
      AuthenticatedVirtancesIdSnapshotsRoute,
    AuthenticatedVirtancesIdIndexRoute: AuthenticatedVirtancesIdIndexRoute,
  }

const AuthenticatedVirtancesIdRouteRouteWithChildren =
  AuthenticatedVirtancesIdRouteRoute._addFileChildren(
    AuthenticatedVirtancesIdRouteRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedImagesRouteRoute: typeof AuthenticatedImagesRouteRouteWithChildren
  AuthenticatedBillingRoute: typeof AuthenticatedBillingRoute
  AuthenticatedFloatingIpsRoute: typeof AuthenticatedFloatingIpsRoute
  AuthenticatedKeypairsRoute: typeof AuthenticatedKeypairsRoute
  AuthenticatedSettingsRoute: typeof AuthenticatedSettingsRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedDatabasesUuidRouteRoute: typeof AuthenticatedDatabasesUuidRouteRouteWithChildren
  AuthenticatedFirewallsUuidRouteRoute: typeof AuthenticatedFirewallsUuidRouteRouteWithChildren
  AuthenticatedLoadbalancersUuidRouteRoute: typeof AuthenticatedLoadbalancersUuidRouteRouteWithChildren
  AuthenticatedVirtancesIdRouteRoute: typeof AuthenticatedVirtancesIdRouteRouteWithChildren
  AuthenticatedDatabasesCreateRoute: typeof AuthenticatedDatabasesCreateRoute
  AuthenticatedLoadbalancersCreateRoute: typeof AuthenticatedLoadbalancersCreateRoute
  AuthenticatedVirtancesCreateRoute: typeof AuthenticatedVirtancesCreateRoute
  AuthenticatedDatabasesIndexRoute: typeof AuthenticatedDatabasesIndexRoute
  AuthenticatedFirewallsIndexRoute: typeof AuthenticatedFirewallsIndexRoute
  AuthenticatedLoadbalancersIndexRoute: typeof AuthenticatedLoadbalancersIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedImagesRouteRoute: AuthenticatedImagesRouteRouteWithChildren,
  AuthenticatedBillingRoute: AuthenticatedBillingRoute,
  AuthenticatedFloatingIpsRoute: AuthenticatedFloatingIpsRoute,
  AuthenticatedKeypairsRoute: AuthenticatedKeypairsRoute,
  AuthenticatedSettingsRoute: AuthenticatedSettingsRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedDatabasesUuidRouteRoute:
    AuthenticatedDatabasesUuidRouteRouteWithChildren,
  AuthenticatedFirewallsUuidRouteRoute:
    AuthenticatedFirewallsUuidRouteRouteWithChildren,
  AuthenticatedLoadbalancersUuidRouteRoute:
    AuthenticatedLoadbalancersUuidRouteRouteWithChildren,
  AuthenticatedVirtancesIdRouteRoute:
    AuthenticatedVirtancesIdRouteRouteWithChildren,
  AuthenticatedDatabasesCreateRoute: AuthenticatedDatabasesCreateRoute,
  AuthenticatedLoadbalancersCreateRoute: AuthenticatedLoadbalancersCreateRoute,
  AuthenticatedVirtancesCreateRoute: AuthenticatedVirtancesCreateRoute,
  AuthenticatedDatabasesIndexRoute: AuthenticatedDatabasesIndexRoute,
  AuthenticatedFirewallsIndexRoute: AuthenticatedFirewallsIndexRoute,
  AuthenticatedLoadbalancersIndexRoute: AuthenticatedLoadbalancersIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof AuthenticatedIndexRoute
  '': typeof AuthenticatedRouteRouteWithChildren
  '/images': typeof AuthenticatedImagesRouteRouteWithChildren
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/reset-password': typeof authResetPasswordRoute
  '/billing': typeof AuthenticatedBillingRoute
  '/floating-ips': typeof AuthenticatedFloatingIpsRoute
  '/keypairs': typeof AuthenticatedKeypairsRoute
  '/settings': typeof AuthenticatedSettingsRoute
  '/databases/$uuid': typeof AuthenticatedDatabasesUuidRouteRouteWithChildren
  '/firewalls/$uuid': typeof AuthenticatedFirewallsUuidRouteRouteWithChildren
  '/loadbalancers/$uuid': typeof AuthenticatedLoadbalancersUuidRouteRouteWithChildren
  '/virtances/$id': typeof AuthenticatedVirtancesIdRouteRouteWithChildren
  '/confirm-email/$token': typeof authConfirmEmailTokenRoute
  '/databases/create': typeof AuthenticatedDatabasesCreateRoute
  '/images/backups': typeof AuthenticatedImagesBackupsRoute
  '/images/snapshots': typeof AuthenticatedImagesSnapshotsRoute
  '/loadbalancers/create': typeof AuthenticatedLoadbalancersCreateRoute
  '/virtances/create': typeof AuthenticatedVirtancesCreateRoute
  '/confirm-email': typeof authConfirmEmailIndexRoute
  '/databases': typeof AuthenticatedDatabasesIndexRoute
  '/firewalls': typeof AuthenticatedFirewallsIndexRoute
  '/loadbalancers': typeof AuthenticatedLoadbalancersIndexRoute
  '/databases/$uuid/backups': typeof AuthenticatedDatabasesUuidBackupsRoute
  '/databases/$uuid/overview': typeof AuthenticatedDatabasesUuidOverviewRoute
  '/databases/$uuid/settings': typeof AuthenticatedDatabasesUuidSettingsRoute
  '/databases/$uuid/snapshots': typeof AuthenticatedDatabasesUuidSnapshotsRoute
  '/firewalls/$uuid/virtances': typeof AuthenticatedFirewallsUuidVirtancesRoute
  '/loadbalancers/$uuid/settings': typeof AuthenticatedLoadbalancersUuidSettingsRoute
  '/loadbalancers/$uuid/virtances': typeof AuthenticatedLoadbalancersUuidVirtancesRoute
  '/virtances/$id/backups': typeof AuthenticatedVirtancesIdBackupsRoute
  '/virtances/$id/console': typeof AuthenticatedVirtancesIdConsoleRoute
  '/virtances/$id/graphs': typeof AuthenticatedVirtancesIdGraphsRoute
  '/virtances/$id/history': typeof AuthenticatedVirtancesIdHistoryRoute
  '/virtances/$id/network': typeof AuthenticatedVirtancesIdNetworkRoute
  '/virtances/$id/resize': typeof AuthenticatedVirtancesIdResizeRoute
  '/virtances/$id/settings': typeof AuthenticatedVirtancesIdSettingsRoute
  '/virtances/$id/snapshots': typeof AuthenticatedVirtancesIdSnapshotsRoute
  '/firewalls/$uuid/': typeof AuthenticatedFirewallsUuidIndexRoute
  '/virtances/$id/': typeof AuthenticatedVirtancesIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof AuthenticatedIndexRoute
  '/images': typeof AuthenticatedImagesRouteRouteWithChildren
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/reset-password': typeof authResetPasswordRoute
  '/billing': typeof AuthenticatedBillingRoute
  '/floating-ips': typeof AuthenticatedFloatingIpsRoute
  '/keypairs': typeof AuthenticatedKeypairsRoute
  '/settings': typeof AuthenticatedSettingsRoute
  '/databases/$uuid': typeof AuthenticatedDatabasesUuidRouteRouteWithChildren
  '/loadbalancers/$uuid': typeof AuthenticatedLoadbalancersUuidRouteRouteWithChildren
  '/confirm-email/$token': typeof authConfirmEmailTokenRoute
  '/databases/create': typeof AuthenticatedDatabasesCreateRoute
  '/images/backups': typeof AuthenticatedImagesBackupsRoute
  '/images/snapshots': typeof AuthenticatedImagesSnapshotsRoute
  '/loadbalancers/create': typeof AuthenticatedLoadbalancersCreateRoute
  '/virtances/create': typeof AuthenticatedVirtancesCreateRoute
  '/confirm-email': typeof authConfirmEmailIndexRoute
  '/databases': typeof AuthenticatedDatabasesIndexRoute
  '/firewalls': typeof AuthenticatedFirewallsIndexRoute
  '/loadbalancers': typeof AuthenticatedLoadbalancersIndexRoute
  '/databases/$uuid/backups': typeof AuthenticatedDatabasesUuidBackupsRoute
  '/databases/$uuid/overview': typeof AuthenticatedDatabasesUuidOverviewRoute
  '/databases/$uuid/settings': typeof AuthenticatedDatabasesUuidSettingsRoute
  '/databases/$uuid/snapshots': typeof AuthenticatedDatabasesUuidSnapshotsRoute
  '/firewalls/$uuid/virtances': typeof AuthenticatedFirewallsUuidVirtancesRoute
  '/loadbalancers/$uuid/settings': typeof AuthenticatedLoadbalancersUuidSettingsRoute
  '/loadbalancers/$uuid/virtances': typeof AuthenticatedLoadbalancersUuidVirtancesRoute
  '/virtances/$id/backups': typeof AuthenticatedVirtancesIdBackupsRoute
  '/virtances/$id/console': typeof AuthenticatedVirtancesIdConsoleRoute
  '/virtances/$id/graphs': typeof AuthenticatedVirtancesIdGraphsRoute
  '/virtances/$id/history': typeof AuthenticatedVirtancesIdHistoryRoute
  '/virtances/$id/network': typeof AuthenticatedVirtancesIdNetworkRoute
  '/virtances/$id/resize': typeof AuthenticatedVirtancesIdResizeRoute
  '/virtances/$id/settings': typeof AuthenticatedVirtancesIdSettingsRoute
  '/virtances/$id/snapshots': typeof AuthenticatedVirtancesIdSnapshotsRoute
  '/firewalls/$uuid': typeof AuthenticatedFirewallsUuidIndexRoute
  '/virtances/$id': typeof AuthenticatedVirtancesIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(auth)': typeof authRouteRouteWithChildren
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_authenticated/images': typeof AuthenticatedImagesRouteRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/register': typeof authRegisterRoute
  '/(auth)/reset-password': typeof authResetPasswordRoute
  '/_authenticated/billing': typeof AuthenticatedBillingRoute
  '/_authenticated/floating-ips': typeof AuthenticatedFloatingIpsRoute
  '/_authenticated/keypairs': typeof AuthenticatedKeypairsRoute
  '/_authenticated/settings': typeof AuthenticatedSettingsRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/databases/$uuid': typeof AuthenticatedDatabasesUuidRouteRouteWithChildren
  '/_authenticated/firewalls/$uuid': typeof AuthenticatedFirewallsUuidRouteRouteWithChildren
  '/_authenticated/loadbalancers/$uuid': typeof AuthenticatedLoadbalancersUuidRouteRouteWithChildren
  '/_authenticated/virtances/$id': typeof AuthenticatedVirtancesIdRouteRouteWithChildren
  '/(auth)/confirm-email/$token': typeof authConfirmEmailTokenRoute
  '/_authenticated/databases/create': typeof AuthenticatedDatabasesCreateRoute
  '/_authenticated/images/backups': typeof AuthenticatedImagesBackupsRoute
  '/_authenticated/images/snapshots': typeof AuthenticatedImagesSnapshotsRoute
  '/_authenticated/loadbalancers/create': typeof AuthenticatedLoadbalancersCreateRoute
  '/_authenticated/virtances/create': typeof AuthenticatedVirtancesCreateRoute
  '/(auth)/confirm-email/': typeof authConfirmEmailIndexRoute
  '/_authenticated/databases/': typeof AuthenticatedDatabasesIndexRoute
  '/_authenticated/firewalls/': typeof AuthenticatedFirewallsIndexRoute
  '/_authenticated/loadbalancers/': typeof AuthenticatedLoadbalancersIndexRoute
  '/_authenticated/databases/$uuid/backups': typeof AuthenticatedDatabasesUuidBackupsRoute
  '/_authenticated/databases/$uuid/overview': typeof AuthenticatedDatabasesUuidOverviewRoute
  '/_authenticated/databases/$uuid/settings': typeof AuthenticatedDatabasesUuidSettingsRoute
  '/_authenticated/databases/$uuid/snapshots': typeof AuthenticatedDatabasesUuidSnapshotsRoute
  '/_authenticated/firewalls/$uuid/virtances': typeof AuthenticatedFirewallsUuidVirtancesRoute
  '/_authenticated/loadbalancers/$uuid/settings': typeof AuthenticatedLoadbalancersUuidSettingsRoute
  '/_authenticated/loadbalancers/$uuid/virtances': typeof AuthenticatedLoadbalancersUuidVirtancesRoute
  '/_authenticated/virtances/$id/backups': typeof AuthenticatedVirtancesIdBackupsRoute
  '/_authenticated/virtances/$id/console': typeof AuthenticatedVirtancesIdConsoleRoute
  '/_authenticated/virtances/$id/graphs': typeof AuthenticatedVirtancesIdGraphsRoute
  '/_authenticated/virtances/$id/history': typeof AuthenticatedVirtancesIdHistoryRoute
  '/_authenticated/virtances/$id/network': typeof AuthenticatedVirtancesIdNetworkRoute
  '/_authenticated/virtances/$id/resize': typeof AuthenticatedVirtancesIdResizeRoute
  '/_authenticated/virtances/$id/settings': typeof AuthenticatedVirtancesIdSettingsRoute
  '/_authenticated/virtances/$id/snapshots': typeof AuthenticatedVirtancesIdSnapshotsRoute
  '/_authenticated/firewalls/$uuid/': typeof AuthenticatedFirewallsUuidIndexRoute
  '/_authenticated/virtances/$id/': typeof AuthenticatedVirtancesIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/images'
    | '/login'
    | '/register'
    | '/reset-password'
    | '/billing'
    | '/floating-ips'
    | '/keypairs'
    | '/settings'
    | '/databases/$uuid'
    | '/firewalls/$uuid'
    | '/loadbalancers/$uuid'
    | '/virtances/$id'
    | '/confirm-email/$token'
    | '/databases/create'
    | '/images/backups'
    | '/images/snapshots'
    | '/loadbalancers/create'
    | '/virtances/create'
    | '/confirm-email'
    | '/databases'
    | '/firewalls'
    | '/loadbalancers'
    | '/databases/$uuid/backups'
    | '/databases/$uuid/overview'
    | '/databases/$uuid/settings'
    | '/databases/$uuid/snapshots'
    | '/firewalls/$uuid/virtances'
    | '/loadbalancers/$uuid/settings'
    | '/loadbalancers/$uuid/virtances'
    | '/virtances/$id/backups'
    | '/virtances/$id/console'
    | '/virtances/$id/graphs'
    | '/virtances/$id/history'
    | '/virtances/$id/network'
    | '/virtances/$id/resize'
    | '/virtances/$id/settings'
    | '/virtances/$id/snapshots'
    | '/firewalls/$uuid/'
    | '/virtances/$id/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/images'
    | '/login'
    | '/register'
    | '/reset-password'
    | '/billing'
    | '/floating-ips'
    | '/keypairs'
    | '/settings'
    | '/databases/$uuid'
    | '/loadbalancers/$uuid'
    | '/confirm-email/$token'
    | '/databases/create'
    | '/images/backups'
    | '/images/snapshots'
    | '/loadbalancers/create'
    | '/virtances/create'
    | '/confirm-email'
    | '/databases'
    | '/firewalls'
    | '/loadbalancers'
    | '/databases/$uuid/backups'
    | '/databases/$uuid/overview'
    | '/databases/$uuid/settings'
    | '/databases/$uuid/snapshots'
    | '/firewalls/$uuid/virtances'
    | '/loadbalancers/$uuid/settings'
    | '/loadbalancers/$uuid/virtances'
    | '/virtances/$id/backups'
    | '/virtances/$id/console'
    | '/virtances/$id/graphs'
    | '/virtances/$id/history'
    | '/virtances/$id/network'
    | '/virtances/$id/resize'
    | '/virtances/$id/settings'
    | '/virtances/$id/snapshots'
    | '/firewalls/$uuid'
    | '/virtances/$id'
  id:
    | '__root__'
    | '/(auth)'
    | '/_authenticated'
    | '/_authenticated/images'
    | '/(auth)/login'
    | '/(auth)/register'
    | '/(auth)/reset-password'
    | '/_authenticated/billing'
    | '/_authenticated/floating-ips'
    | '/_authenticated/keypairs'
    | '/_authenticated/settings'
    | '/_authenticated/'
    | '/_authenticated/databases/$uuid'
    | '/_authenticated/firewalls/$uuid'
    | '/_authenticated/loadbalancers/$uuid'
    | '/_authenticated/virtances/$id'
    | '/(auth)/confirm-email/$token'
    | '/_authenticated/databases/create'
    | '/_authenticated/images/backups'
    | '/_authenticated/images/snapshots'
    | '/_authenticated/loadbalancers/create'
    | '/_authenticated/virtances/create'
    | '/(auth)/confirm-email/'
    | '/_authenticated/databases/'
    | '/_authenticated/firewalls/'
    | '/_authenticated/loadbalancers/'
    | '/_authenticated/databases/$uuid/backups'
    | '/_authenticated/databases/$uuid/overview'
    | '/_authenticated/databases/$uuid/settings'
    | '/_authenticated/databases/$uuid/snapshots'
    | '/_authenticated/firewalls/$uuid/virtances'
    | '/_authenticated/loadbalancers/$uuid/settings'
    | '/_authenticated/loadbalancers/$uuid/virtances'
    | '/_authenticated/virtances/$id/backups'
    | '/_authenticated/virtances/$id/console'
    | '/_authenticated/virtances/$id/graphs'
    | '/_authenticated/virtances/$id/history'
    | '/_authenticated/virtances/$id/network'
    | '/_authenticated/virtances/$id/resize'
    | '/_authenticated/virtances/$id/settings'
    | '/_authenticated/virtances/$id/snapshots'
    | '/_authenticated/firewalls/$uuid/'
    | '/_authenticated/virtances/$id/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  authRouteRoute: typeof authRouteRouteWithChildren
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  authRouteRoute: authRouteRouteWithChildren,
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(auth)",
        "/_authenticated"
      ]
    },
    "/(auth)": {
      "filePath": "(auth)/route.tsx",
      "children": [
        "/(auth)/login",
        "/(auth)/register",
        "/(auth)/reset-password",
        "/(auth)/confirm-email/$token",
        "/(auth)/confirm-email/"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/images",
        "/_authenticated/billing",
        "/_authenticated/floating-ips",
        "/_authenticated/keypairs",
        "/_authenticated/settings",
        "/_authenticated/",
        "/_authenticated/databases/$uuid",
        "/_authenticated/firewalls/$uuid",
        "/_authenticated/loadbalancers/$uuid",
        "/_authenticated/virtances/$id",
        "/_authenticated/databases/create",
        "/_authenticated/loadbalancers/create",
        "/_authenticated/virtances/create",
        "/_authenticated/databases/",
        "/_authenticated/firewalls/",
        "/_authenticated/loadbalancers/"
      ]
    },
    "/_authenticated/images": {
      "filePath": "_authenticated/images/route.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/images/backups",
        "/_authenticated/images/snapshots"
      ]
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx",
      "parent": "/(auth)"
    },
    "/(auth)/register": {
      "filePath": "(auth)/register.tsx",
      "parent": "/(auth)"
    },
    "/(auth)/reset-password": {
      "filePath": "(auth)/reset-password.tsx",
      "parent": "/(auth)"
    },
    "/_authenticated/billing": {
      "filePath": "_authenticated/billing.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/floating-ips": {
      "filePath": "_authenticated/floating-ips.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/keypairs": {
      "filePath": "_authenticated/keypairs.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings": {
      "filePath": "_authenticated/settings.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/databases/$uuid": {
      "filePath": "_authenticated/databases/$uuid/route.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/databases/$uuid/backups",
        "/_authenticated/databases/$uuid/overview",
        "/_authenticated/databases/$uuid/settings",
        "/_authenticated/databases/$uuid/snapshots"
      ]
    },
    "/_authenticated/firewalls/$uuid": {
      "filePath": "_authenticated/firewalls/$uuid/route.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/firewalls/$uuid/virtances",
        "/_authenticated/firewalls/$uuid/"
      ]
    },
    "/_authenticated/loadbalancers/$uuid": {
      "filePath": "_authenticated/loadbalancers/$uuid/route.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/loadbalancers/$uuid/settings",
        "/_authenticated/loadbalancers/$uuid/virtances"
      ]
    },
    "/_authenticated/virtances/$id": {
      "filePath": "_authenticated/virtances/$id/route.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/virtances/$id/backups",
        "/_authenticated/virtances/$id/console",
        "/_authenticated/virtances/$id/graphs",
        "/_authenticated/virtances/$id/history",
        "/_authenticated/virtances/$id/network",
        "/_authenticated/virtances/$id/resize",
        "/_authenticated/virtances/$id/settings",
        "/_authenticated/virtances/$id/snapshots",
        "/_authenticated/virtances/$id/"
      ]
    },
    "/(auth)/confirm-email/$token": {
      "filePath": "(auth)/confirm-email/$token.tsx",
      "parent": "/(auth)"
    },
    "/_authenticated/databases/create": {
      "filePath": "_authenticated/databases/create.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/images/backups": {
      "filePath": "_authenticated/images/backups.tsx",
      "parent": "/_authenticated/images"
    },
    "/_authenticated/images/snapshots": {
      "filePath": "_authenticated/images/snapshots.tsx",
      "parent": "/_authenticated/images"
    },
    "/_authenticated/loadbalancers/create": {
      "filePath": "_authenticated/loadbalancers/create.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/virtances/create": {
      "filePath": "_authenticated/virtances/create.tsx",
      "parent": "/_authenticated"
    },
    "/(auth)/confirm-email/": {
      "filePath": "(auth)/confirm-email/index.tsx",
      "parent": "/(auth)"
    },
    "/_authenticated/databases/": {
      "filePath": "_authenticated/databases/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/firewalls/": {
      "filePath": "_authenticated/firewalls/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/loadbalancers/": {
      "filePath": "_authenticated/loadbalancers/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/databases/$uuid/backups": {
      "filePath": "_authenticated/databases/$uuid/backups.tsx",
      "parent": "/_authenticated/databases/$uuid"
    },
    "/_authenticated/databases/$uuid/overview": {
      "filePath": "_authenticated/databases/$uuid/overview.tsx",
      "parent": "/_authenticated/databases/$uuid"
    },
    "/_authenticated/databases/$uuid/settings": {
      "filePath": "_authenticated/databases/$uuid/settings.tsx",
      "parent": "/_authenticated/databases/$uuid"
    },
    "/_authenticated/databases/$uuid/snapshots": {
      "filePath": "_authenticated/databases/$uuid/snapshots.tsx",
      "parent": "/_authenticated/databases/$uuid"
    },
    "/_authenticated/firewalls/$uuid/virtances": {
      "filePath": "_authenticated/firewalls/$uuid/virtances.tsx",
      "parent": "/_authenticated/firewalls/$uuid"
    },
    "/_authenticated/loadbalancers/$uuid/settings": {
      "filePath": "_authenticated/loadbalancers/$uuid/settings.tsx",
      "parent": "/_authenticated/loadbalancers/$uuid"
    },
    "/_authenticated/loadbalancers/$uuid/virtances": {
      "filePath": "_authenticated/loadbalancers/$uuid/virtances.tsx",
      "parent": "/_authenticated/loadbalancers/$uuid"
    },
    "/_authenticated/virtances/$id/backups": {
      "filePath": "_authenticated/virtances/$id/backups.tsx",
      "parent": "/_authenticated/virtances/$id"
    },
    "/_authenticated/virtances/$id/console": {
      "filePath": "_authenticated/virtances/$id/console.tsx",
      "parent": "/_authenticated/virtances/$id"
    },
    "/_authenticated/virtances/$id/graphs": {
      "filePath": "_authenticated/virtances/$id/graphs.tsx",
      "parent": "/_authenticated/virtances/$id"
    },
    "/_authenticated/virtances/$id/history": {
      "filePath": "_authenticated/virtances/$id/history.tsx",
      "parent": "/_authenticated/virtances/$id"
    },
    "/_authenticated/virtances/$id/network": {
      "filePath": "_authenticated/virtances/$id/network.tsx",
      "parent": "/_authenticated/virtances/$id"
    },
    "/_authenticated/virtances/$id/resize": {
      "filePath": "_authenticated/virtances/$id/resize.tsx",
      "parent": "/_authenticated/virtances/$id"
    },
    "/_authenticated/virtances/$id/settings": {
      "filePath": "_authenticated/virtances/$id/settings.tsx",
      "parent": "/_authenticated/virtances/$id"
    },
    "/_authenticated/virtances/$id/snapshots": {
      "filePath": "_authenticated/virtances/$id/snapshots.tsx",
      "parent": "/_authenticated/virtances/$id"
    },
    "/_authenticated/firewalls/$uuid/": {
      "filePath": "_authenticated/firewalls/$uuid/index.tsx",
      "parent": "/_authenticated/firewalls/$uuid"
    },
    "/_authenticated/virtances/$id/": {
      "filePath": "_authenticated/virtances/$id/index.tsx",
      "parent": "/_authenticated/virtances/$id"
    }
  }
}
ROUTE_MANIFEST_END */
